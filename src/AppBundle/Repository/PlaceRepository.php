<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PlaceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlaceRepository extends EntityRepository
{
    public function getPlaces($id, $category)
    {
        $queryBuilder = $this->createQueryBuilder('P');

        if ($id) {
            $queryBuilder->select('P.id, P.name')
                ->where('P.id = :id')
                ->setParameter('id', $id);
        }

        $queryBuilder->select('P.id', 'P.name as place_name', 'P.description', 'P.address', 'P.zip', 'P.phone', 'P.webAddress', 'P.openHours', 'P.isClosed', 'P.coordLongitude', 'P.coordLatitude', 'P.imageUrl', 'C.name as category_name', 'O.name as city_name')
            ->join('P.category', 'C')
            ->join('P.city', 'O');

        if ($category) {
            $queryBuilder->where('C.id = :category')
                ->setParameter('category', $category);
        }

        $results = $queryBuilder->getQuery()->getArrayResult();
        $keyRepo = $this->getEntityManager()->getRepository('AppBundle:App\Keyword');

        $finalResult = [];
        foreach ($results as $result) {
            $keys = $keyRepo->getKeywordsForPlace($result['id']);
            $result['keys'] = $keys;
            $finalResult[] = $result;
        }

        return $finalResult;
    }

    public function getRecommendations($place_id, $category, $keywords)
    {
        $queryBuilder = $this->createQueryBuilder('P');

        $queryBuilder->select('P.id', 'P.name')
            ->join('P.category', 'C')
            ->join('P.keywords', 'K')
            ->where('C = :category')
            ->andWhere('K IN (:keywords)')
            ->andWhere('P.id != :id')
            ->groupBy('P.id')
            ->setParameters(array('category' => $category, 'keywords' => $keywords, 'id' => $place_id));

        $results = $queryBuilder->getQuery()->getResult();
        $keyRepo = $this->getEntityManager()->getRepository('AppBundle:App\Keyword');

        $finalResult = [];
        foreach ($results as $result) {
            $keys = $keyRepo->getKeywordsForPlace($result['id']);
            $result['keys'] = $keys;
            $finalResult[] = $result;
        }

        return $finalResult;
    }

}
